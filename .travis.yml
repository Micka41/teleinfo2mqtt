language: shell
os: linux

env:
  global:
    - NODE_VERSION=14
    - CC_TEST_REPORTER_ID=054a8c4f2007b9299933b67221504554462eed6cbb06c364c926a9869dfd4020
    - DOCKER_CLI_EXPERIMENTAL=enabled
    - IMAGE_VERSION=develop

before_install:

  # Install docker with buildx
  - sudo rm -rf /var/lib/apt/lists/*
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - lsb_release -cs
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  #- docker run --rm --privileged multiarch/qemu-user-static:register --reset
  - docker run --rm --privileged docker/binfmt:820fdd95a9972a5308930a2bdfb8573dd4447ad3
  - cat /proc/sys/fs/binfmt_misc/qemu-aarch64

  # Install Nodejs
  - nvm install $NODE_VERSION

  # Init Code Climate
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  - ./cc-test-reporter before-build

script:

  # Install npm dependencies
  - npm ci

  # Run Linter
  - npm run lint

  # Run Unit tests
  - npm test

  # Report to Code Climate
  - ./cc-test-reporter after-build -t lcov --debug --exit-code $TRAVIS_TEST_RESULT;

after_script:

  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  - docker version
  - make prepare

  # Override image version with latest if master branch
  - if [ "$TRAVIS_BRANCH" == "master" ] ; then export IMAGE_VERSION=latest; fi

  # Override image version with tag name if any
  - if [ ! -z "$TRAVIS_TAG" ] ; then export IMAGE_VERSION=$TRAVIS_TAG; fi

  # Build & push image
  - make build IMAGE_NAME=$DOCKER_USERNAME/teleinfo-mqtt IMAGE_VERSION=$IMAGE_VERSION PLATFORMS=linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/amd64